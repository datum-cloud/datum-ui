/* eslint-disable */
import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Maybe<T> = T | null;
export type InputMaybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
/** All built-in and custom scalars, mapped to their actual values */
export interface Scalars {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  /** A valid JSON string. */
  JSON: { input: any; output: any; }
  /** The builtin Map type */
  Map: { input: any; output: any; }
  /** The builtin Time type */
  Time: { input: any; output: any; }
  /** The builtin Uint type */
  Uint: { input: any; output: any; }
}

/**
 * APITokenWhereInput is used for filtering APIToken objects.
 * Input was generated by ent.
 */
export interface ApiTokenWhereInput {
  and?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ApiTokenWhereInput>;
  or?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * CreateAPITokenInput is used for create APIToken object.
 * Input was generated by ent.
 */
export interface CreateApiTokenInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  /** when the token expires */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name: Scalars['String']['input'];
  ownerID: Scalars['ID']['input'];
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateDocumentDataInput is used for create DocumentData object.
 * Input was generated by ent.
 */
export interface CreateDocumentDataInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** the json data of the document */
  data: Scalars['JSON']['input'];
  templateID: Scalars['ID']['input'];
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateEntitlementInput is used for create Entitlement object.
 * Input was generated by ent.
 */
export interface CreateEntitlementInput {
  /** whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at */
  cancelled?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** whether or not the customers entitlement expires - expires_at will show the time */
  expires?: InputMaybe<Scalars['Boolean']['input']>;
  /** the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  /** used to store references to external systems, e.g. Stripe */
  externalCustomerID?: InputMaybe<Scalars['String']['input']>;
  /** used to store references to external systems, e.g. Stripe */
  externalSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  featureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  tier?: InputMaybe<EntitlementTier>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateEventInput is used for create Event object.
 * Input was generated by ent.
 */
export interface CreateEventInput {
  correlationID?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  entitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventType: Scalars['String']['input'];
  featureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  hushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<Scalars['Map']['input']>;
  oauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  webhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateFeatureInput is used for create Feature object.
 * Input was generated by ent.
 */
export interface CreateFeatureInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  entitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  global?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  name: Scalars['String']['input'];
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateFileInput is used for create File object.
 * Input was generated by ent.
 */
export interface CreateFileInput {
  annotation?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  contentType: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  fileExtension: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
  fileSize?: InputMaybe<Scalars['Int']['input']>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  storeKey: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/**
 * CreateGroupInput is used for create Group object.
 * Input was generated by ent.
 */
export interface CreateGroupInput {
  createGroupSettings?: InputMaybe<CreateGroupSettingInput>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  featureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: InputMaybe<Scalars['String']['input']>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>;
  /** the name of the group - must be unique within the organization */
  name: Scalars['String']['input'];
  ownerID: Scalars['ID']['input'];
  settingID: Scalars['ID']['input'];
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateGroupMembershipInput is used for create GroupMembership object.
 * Input was generated by ent.
 */
export interface CreateGroupMembershipInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupID: Scalars['ID']['input'];
  role?: InputMaybe<GroupMembershipRole>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID: Scalars['ID']['input'];
}

/**
 * CreateGroupSettingInput is used for create GroupSetting object.
 * Input was generated by ent.
 */
export interface CreateGroupSettingInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>;
}

/**
 * CreateHushInput is used for create Hush object.
 * Input was generated by ent.
 */
export interface CreateHushInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the logical name of the corresponding hush secret or it's general grouping */
  name: Scalars['String']['input'];
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the generic name of a secret associated with the organization */
  secretName?: InputMaybe<Scalars['String']['input']>;
  /** the secret value */
  secretValue?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateIntegrationInput is used for create Integration object.
 * Input was generated by ent.
 */
export interface CreateIntegrationInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the name of the integration - must be unique within the organization */
  name: Scalars['String']['input'];
  oauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateInviteInput is used for create Invite object.
 * Input was generated by ent.
 */
export interface CreateInviteInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires: Scalars['Time']['input'];
  ownerID: Scalars['ID']['input'];
  /** the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization */
  recipient: Scalars['String']['input'];
  /** the user who initiated the invitation */
  requestorID: Scalars['String']['input'];
  role?: InputMaybe<InviteRole>;
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateOauthProviderInput is used for create OauthProvider object.
 * Input was generated by ent.
 */
export interface CreateOauthProviderInput {
  /** the auth style, 0: auto detect 1: third party log in 2: log in with username and password */
  authStyle: Scalars['Uint']['input'];
  /** the auth url of the provider */
  authURL: Scalars['String']['input'];
  /** the client id for the oauth provider */
  clientID: Scalars['String']['input'];
  /** the client secret */
  clientSecret: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** the URL to request user information by token */
  infoURL: Scalars['String']['input'];
  /** the oauth provider's name */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the redirect url */
  redirectURL: Scalars['String']['input'];
  /** the scopes */
  scopes: Scalars['String']['input'];
  /** the token url of the provider */
  tokenURL: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateOhAuthTooTokenInput is used for create OhAuthTooToken object.
 * Input was generated by ent.
 */
export interface CreateOhAuthTooTokenInput {
  claimsEmail: Scalars['String']['input'];
  claimsEmailVerified: Scalars['Boolean']['input'];
  claimsGroups?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsPreferredUsername: Scalars['String']['input'];
  claimsUserID: Scalars['String']['input'];
  claimsUsername: Scalars['String']['input'];
  clientID: Scalars['String']['input'];
  connectorData?: InputMaybe<Array<Scalars['String']['input']>>;
  connectorID: Scalars['String']['input'];
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastUsed?: InputMaybe<Scalars['Time']['input']>;
  nonce: Scalars['String']['input'];
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateOrgMembershipInput is used for create OrgMembership object.
 * Input was generated by ent.
 */
export interface CreateOrgMembershipInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationID: Scalars['ID']['input'];
  role?: InputMaybe<OrgMembershipRole>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID: Scalars['ID']['input'];
}

/**
 * CreateOrganizationInput is used for create Organization object.
 * Input was generated by ent.
 */
export interface CreateOrganizationInput {
  apiTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  createOrgSettings?: InputMaybe<CreateOrganizationSettingInput>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** Whether the organization has a dedicated database */
  dedicatedDb?: InputMaybe<Scalars['Boolean']['input']>;
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  entitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  featureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the organization */
  name: Scalars['String']['input'];
  oauthproviderIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentID?: InputMaybe<Scalars['ID']['input']>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** orgs directly associated with a user */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  webhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateOrganizationSettingInput is used for create OrganizationSetting object.
 * Input was generated by ent.
 */
export interface CreateOrganizationSettingInput {
  /** Address to send billing information to */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface CreatePersonalAccessTokenInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** when the token expires */
  expiresAt: Scalars['Time']['input'];
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name: Scalars['String']['input'];
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateSubscriberInput is used for create Subscriber object.
 * Input was generated by ent.
 */
export interface CreateSubscriberInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** email address of the subscriber */
  email: Scalars['String']['input'];
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateTFASettingInput is used for create TFASetting object.
 * Input was generated by ent.
 */
export interface CreateTfaSettingInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateTemplateInput is used for create Template object.
 * Input was generated by ent.
 */
export interface CreateTemplateInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>;
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the jsonschema object of the template */
  jsonconfig: Scalars['JSON']['input'];
  /** the name of the template */
  name: Scalars['String']['input'];
  ownerID: Scalars['ID']['input'];
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>;
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateUserInput is used for create User object.
 * Input was generated by ent.
 */
export interface CreateUserInput {
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>;
  /** The user's local avatar file */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** The user's displayed 'friendly' name */
  displayName: Scalars['String']['input'];
  email: Scalars['String']['input'];
  emailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  featureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  firstName: Scalars['String']['input'];
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastName: Scalars['String']['input'];
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>;
  passwordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the user's role */
  role?: InputMaybe<UserRole>;
  settingID: Scalars['ID']['input'];
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>;
  tfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  webauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateUserSettingInput is used for create UserSetting object.
 * Input was generated by ent.
 */
export interface CreateUserSettingInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>;
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>;
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  /** tags associated with the user */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/**
 * CreateWebhookInput is used for create Webhook object.
 * Input was generated by ent.
 */
export interface CreateWebhookInput {
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  /** a description of the webhook */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the url to send the webhook to */
  destinationURL: Scalars['String']['input'];
  /** indicates if the webhook is active and enabled */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the number of failures */
  failures?: InputMaybe<Scalars['Int']['input']>;
  /** the last error message */
  lastError?: InputMaybe<Scalars['String']['input']>;
  /** the last response */
  lastResponse?: InputMaybe<Scalars['String']['input']>;
  /** the name of the webhook */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/** DocumentDataHistoryOpType is enum for the field operation */
export enum DocumentDataHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * DocumentDataHistoryWhereInput is used for filtering DocumentDataHistory objects.
 * Input was generated by ent.
 */
export interface DocumentDataHistoryWhereInput {
  and?: InputMaybe<Array<DocumentDataHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<DocumentDataHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<DocumentDataHistoryOpType>;
  operationIn?: InputMaybe<Array<DocumentDataHistoryOpType>>;
  operationNEQ?: InputMaybe<DocumentDataHistoryOpType>;
  operationNotIn?: InputMaybe<Array<DocumentDataHistoryOpType>>;
  or?: InputMaybe<Array<DocumentDataHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['String']['input']>;
  templateIDContains?: InputMaybe<Scalars['String']['input']>;
  templateIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  templateIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  templateIDGT?: InputMaybe<Scalars['String']['input']>;
  templateIDGTE?: InputMaybe<Scalars['String']['input']>;
  templateIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  templateIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  templateIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  templateIDLT?: InputMaybe<Scalars['String']['input']>;
  templateIDLTE?: InputMaybe<Scalars['String']['input']>;
  templateIDNEQ?: InputMaybe<Scalars['String']['input']>;
  templateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * DocumentDataWhereInput is used for filtering DocumentData objects.
 * Input was generated by ent.
 */
export interface DocumentDataWhereInput {
  and?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template edge predicates */
  hasTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplateWith?: InputMaybe<Array<TemplateWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<DocumentDataWhereInput>;
  or?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['ID']['input']>;
  templateIDContains?: InputMaybe<Scalars['ID']['input']>;
  templateIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  templateIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  templateIDGT?: InputMaybe<Scalars['ID']['input']>;
  templateIDGTE?: InputMaybe<Scalars['ID']['input']>;
  templateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  templateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  templateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateIDLT?: InputMaybe<Scalars['ID']['input']>;
  templateIDLTE?: InputMaybe<Scalars['ID']['input']>;
  templateIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  templateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** EntitlementHistoryOpType is enum for the field operation */
export enum EntitlementHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** EntitlementHistoryTier is enum for the field tier */
export enum EntitlementHistoryTier {
  ENTERPRISE = 'ENTERPRISE',
  FREE = 'FREE',
  PRO = 'PRO'
}

/**
 * EntitlementHistoryWhereInput is used for filtering EntitlementHistory objects.
 * Input was generated by ent.
 */
export interface EntitlementHistoryWhereInput {
  and?: InputMaybe<Array<EntitlementHistoryWhereInput>>;
  /** cancelled field predicates */
  cancelled?: InputMaybe<Scalars['Boolean']['input']>;
  cancelledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires field predicates */
  expires?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_customer_id field predicates */
  externalCustomerID?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDContains?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDGT?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalCustomerIDLT?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_subscription_id field predicates */
  externalSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EntitlementHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<EntitlementHistoryOpType>;
  operationIn?: InputMaybe<Array<EntitlementHistoryOpType>>;
  operationNEQ?: InputMaybe<EntitlementHistoryOpType>;
  operationNotIn?: InputMaybe<Array<EntitlementHistoryOpType>>;
  or?: InputMaybe<Array<EntitlementHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tier field predicates */
  tier?: InputMaybe<EntitlementHistoryTier>;
  tierIn?: InputMaybe<Array<EntitlementHistoryTier>>;
  tierNEQ?: InputMaybe<EntitlementHistoryTier>;
  tierNotIn?: InputMaybe<Array<EntitlementHistoryTier>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** EntitlementTier is enum for the field tier */
export enum EntitlementTier {
  ENTERPRISE = 'ENTERPRISE',
  FREE = 'FREE',
  PRO = 'PRO'
}

/**
 * EntitlementWhereInput is used for filtering Entitlement objects.
 * Input was generated by ent.
 */
export interface EntitlementWhereInput {
  and?: InputMaybe<Array<EntitlementWhereInput>>;
  /** cancelled field predicates */
  cancelled?: InputMaybe<Scalars['Boolean']['input']>;
  cancelledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires field predicates */
  expires?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_customer_id field predicates */
  externalCustomerID?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDContains?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDGT?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalCustomerIDLT?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_subscription_id field predicates */
  externalSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** features edge predicates */
  hasFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  hasFeaturesWith?: InputMaybe<Array<FeatureWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EntitlementWhereInput>;
  or?: InputMaybe<Array<EntitlementWhereInput>>;
  /** tier field predicates */
  tier?: InputMaybe<EntitlementTier>;
  tierIn?: InputMaybe<Array<EntitlementTier>>;
  tierNEQ?: InputMaybe<EntitlementTier>;
  tierNotIn?: InputMaybe<Array<EntitlementTier>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** EventHistoryOpType is enum for the field operation */
export enum EventHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * EventHistoryWhereInput is used for filtering EventHistory objects.
 * Input was generated by ent.
 */
export interface EventHistoryWhereInput {
  and?: InputMaybe<Array<EventHistoryWhereInput>>;
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>;
  correlationIDContains?: InputMaybe<Scalars['String']['input']>;
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDGT?: InputMaybe<Scalars['String']['input']>;
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  correlationIDLT?: InputMaybe<Scalars['String']['input']>;
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventIDContains?: InputMaybe<Scalars['String']['input']>;
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventIDGT?: InputMaybe<Scalars['String']['input']>;
  eventIDGTE?: InputMaybe<Scalars['String']['input']>;
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventIDLT?: InputMaybe<Scalars['String']['input']>;
  eventIDLTE?: InputMaybe<Scalars['String']['input']>;
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>;
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventTypeContains?: InputMaybe<Scalars['String']['input']>;
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeGT?: InputMaybe<Scalars['String']['input']>;
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventTypeLT?: InputMaybe<Scalars['String']['input']>;
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EventHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<EventHistoryOpType>;
  operationIn?: InputMaybe<Array<EventHistoryOpType>>;
  operationNEQ?: InputMaybe<EventHistoryOpType>;
  operationNotIn?: InputMaybe<Array<EventHistoryOpType>>;
  or?: InputMaybe<Array<EventHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * EventWhereInput is used for filtering Event objects.
 * Input was generated by ent.
 */
export interface EventWhereInput {
  and?: InputMaybe<Array<EventWhereInput>>;
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>;
  correlationIDContains?: InputMaybe<Scalars['String']['input']>;
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDGT?: InputMaybe<Scalars['String']['input']>;
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  correlationIDLT?: InputMaybe<Scalars['String']['input']>;
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventIDContains?: InputMaybe<Scalars['String']['input']>;
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventIDGT?: InputMaybe<Scalars['String']['input']>;
  eventIDGTE?: InputMaybe<Scalars['String']['input']>;
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventIDLT?: InputMaybe<Scalars['String']['input']>;
  eventIDLTE?: InputMaybe<Scalars['String']['input']>;
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>;
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventTypeContains?: InputMaybe<Scalars['String']['input']>;
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeGT?: InputMaybe<Scalars['String']['input']>;
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventTypeLT?: InputMaybe<Scalars['String']['input']>;
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** entitlement edge predicates */
  hasEntitlement?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitlementWith?: InputMaybe<Array<EntitlementWhereInput>>;
  /** feature edge predicates */
  hasFeature?: InputMaybe<Scalars['Boolean']['input']>;
  hasFeatureWith?: InputMaybe<Array<FeatureWhereInput>>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** groupmembership edge predicates */
  hasGroupmembership?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupmembershipWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** hush edge predicates */
  hasHush?: InputMaybe<Scalars['Boolean']['input']>;
  hasHushWith?: InputMaybe<Array<HushWhereInput>>;
  /** integration edge predicates */
  hasIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** invite edge predicates */
  hasInvite?: InputMaybe<Scalars['Boolean']['input']>;
  hasInviteWith?: InputMaybe<Array<InviteWhereInput>>;
  /** oauth2token edge predicates */
  hasOauth2token?: InputMaybe<Scalars['Boolean']['input']>;
  hasOauth2tokenWith?: InputMaybe<Array<OhAuthTooTokenWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** orgmembership edge predicates */
  hasOrgmembership?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrgmembershipWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** personal_access_token edge predicates */
  hasPersonalAccessToken?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokenWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** subscriber edge predicates */
  hasSubscriber?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscriberWith?: InputMaybe<Array<SubscriberWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** webhook edge predicates */
  hasWebhook?: InputMaybe<Scalars['Boolean']['input']>;
  hasWebhookWith?: InputMaybe<Array<WebhookWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EventWhereInput>;
  or?: InputMaybe<Array<EventWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** FeatureHistoryOpType is enum for the field operation */
export enum FeatureHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * FeatureHistoryWhereInput is used for filtering FeatureHistory objects.
 * Input was generated by ent.
 */
export interface FeatureHistoryWhereInput {
  and?: InputMaybe<Array<FeatureHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** enabled field predicates */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** global field predicates */
  global?: InputMaybe<Scalars['Boolean']['input']>;
  globalNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<FeatureHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<FeatureHistoryOpType>;
  operationIn?: InputMaybe<Array<FeatureHistoryOpType>>;
  operationNEQ?: InputMaybe<FeatureHistoryOpType>;
  operationNotIn?: InputMaybe<Array<FeatureHistoryOpType>>;
  or?: InputMaybe<Array<FeatureHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * FeatureWhereInput is used for filtering Feature objects.
 * Input was generated by ent.
 */
export interface FeatureWhereInput {
  and?: InputMaybe<Array<FeatureWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** enabled field predicates */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** global field predicates */
  global?: InputMaybe<Scalars['Boolean']['input']>;
  globalNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** entitlements edge predicates */
  hasEntitlements?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitlementsWith?: InputMaybe<Array<EntitlementWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<FeatureWhereInput>;
  or?: InputMaybe<Array<FeatureWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** FileHistoryOpType is enum for the field operation */
export enum FileHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * FileHistoryWhereInput is used for filtering FileHistory objects.
 * Input was generated by ent.
 */
export interface FileHistoryWhereInput {
  and?: InputMaybe<Array<FileHistoryWhereInput>>;
  /** annotation field predicates */
  annotation?: InputMaybe<Scalars['String']['input']>;
  annotationContains?: InputMaybe<Scalars['String']['input']>;
  annotationContainsFold?: InputMaybe<Scalars['String']['input']>;
  annotationEqualFold?: InputMaybe<Scalars['String']['input']>;
  annotationGT?: InputMaybe<Scalars['String']['input']>;
  annotationGTE?: InputMaybe<Scalars['String']['input']>;
  annotationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  annotationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  annotationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  annotationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  annotationLT?: InputMaybe<Scalars['String']['input']>;
  annotationLTE?: InputMaybe<Scalars['String']['input']>;
  annotationNEQ?: InputMaybe<Scalars['String']['input']>;
  annotationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  annotationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** content_type field predicates */
  contentType?: InputMaybe<Scalars['String']['input']>;
  contentTypeContains?: InputMaybe<Scalars['String']['input']>;
  contentTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeGT?: InputMaybe<Scalars['String']['input']>;
  contentTypeGTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  contentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  contentTypeLT?: InputMaybe<Scalars['String']['input']>;
  contentTypeLTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  contentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** file_extension field predicates */
  fileExtension?: InputMaybe<Scalars['String']['input']>;
  fileExtensionContains?: InputMaybe<Scalars['String']['input']>;
  fileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>;
  fileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>;
  fileExtensionGT?: InputMaybe<Scalars['String']['input']>;
  fileExtensionGTE?: InputMaybe<Scalars['String']['input']>;
  fileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileExtensionLT?: InputMaybe<Scalars['String']['input']>;
  fileExtensionLTE?: InputMaybe<Scalars['String']['input']>;
  fileExtensionNEQ?: InputMaybe<Scalars['String']['input']>;
  fileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** file_name field predicates */
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileNameContains?: InputMaybe<Scalars['String']['input']>;
  fileNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  fileNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  fileNameGT?: InputMaybe<Scalars['String']['input']>;
  fileNameGTE?: InputMaybe<Scalars['String']['input']>;
  fileNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fileNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fileNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileNameLT?: InputMaybe<Scalars['String']['input']>;
  fileNameLTE?: InputMaybe<Scalars['String']['input']>;
  fileNameNEQ?: InputMaybe<Scalars['String']['input']>;
  fileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** file_size field predicates */
  fileSize?: InputMaybe<Scalars['Int']['input']>;
  fileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  fileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  fileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  fileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  fileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  fileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  fileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  fileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  fileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<FileHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<FileHistoryOpType>;
  operationIn?: InputMaybe<Array<FileHistoryOpType>>;
  operationNEQ?: InputMaybe<FileHistoryOpType>;
  operationNotIn?: InputMaybe<Array<FileHistoryOpType>>;
  or?: InputMaybe<Array<FileHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  storeKeyContains?: InputMaybe<Scalars['String']['input']>;
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyGT?: InputMaybe<Scalars['String']['input']>;
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyLT?: InputMaybe<Scalars['String']['input']>;
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * FileWhereInput is used for filtering File objects.
 * Input was generated by ent.
 */
export interface FileWhereInput {
  and?: InputMaybe<Array<FileWhereInput>>;
  /** annotation field predicates */
  annotation?: InputMaybe<Scalars['String']['input']>;
  annotationContains?: InputMaybe<Scalars['String']['input']>;
  annotationContainsFold?: InputMaybe<Scalars['String']['input']>;
  annotationEqualFold?: InputMaybe<Scalars['String']['input']>;
  annotationGT?: InputMaybe<Scalars['String']['input']>;
  annotationGTE?: InputMaybe<Scalars['String']['input']>;
  annotationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  annotationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  annotationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  annotationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  annotationLT?: InputMaybe<Scalars['String']['input']>;
  annotationLTE?: InputMaybe<Scalars['String']['input']>;
  annotationNEQ?: InputMaybe<Scalars['String']['input']>;
  annotationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  annotationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** content_type field predicates */
  contentType?: InputMaybe<Scalars['String']['input']>;
  contentTypeContains?: InputMaybe<Scalars['String']['input']>;
  contentTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeGT?: InputMaybe<Scalars['String']['input']>;
  contentTypeGTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  contentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  contentTypeLT?: InputMaybe<Scalars['String']['input']>;
  contentTypeLTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  contentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** file_extension field predicates */
  fileExtension?: InputMaybe<Scalars['String']['input']>;
  fileExtensionContains?: InputMaybe<Scalars['String']['input']>;
  fileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>;
  fileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>;
  fileExtensionGT?: InputMaybe<Scalars['String']['input']>;
  fileExtensionGTE?: InputMaybe<Scalars['String']['input']>;
  fileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileExtensionLT?: InputMaybe<Scalars['String']['input']>;
  fileExtensionLTE?: InputMaybe<Scalars['String']['input']>;
  fileExtensionNEQ?: InputMaybe<Scalars['String']['input']>;
  fileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** file_name field predicates */
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileNameContains?: InputMaybe<Scalars['String']['input']>;
  fileNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  fileNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  fileNameGT?: InputMaybe<Scalars['String']['input']>;
  fileNameGTE?: InputMaybe<Scalars['String']['input']>;
  fileNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fileNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fileNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fileNameLT?: InputMaybe<Scalars['String']['input']>;
  fileNameLTE?: InputMaybe<Scalars['String']['input']>;
  fileNameNEQ?: InputMaybe<Scalars['String']['input']>;
  fileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** file_size field predicates */
  fileSize?: InputMaybe<Scalars['Int']['input']>;
  fileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  fileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  fileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  fileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  fileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  fileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  fileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  fileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  fileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<FileWhereInput>;
  or?: InputMaybe<Array<FileWhereInput>>;
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  storeKeyContains?: InputMaybe<Scalars['String']['input']>;
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyGT?: InputMaybe<Scalars['String']['input']>;
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyLT?: InputMaybe<Scalars['String']['input']>;
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** GroupHistoryOpType is enum for the field operation */
export enum GroupHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for GroupHistory connections */
export interface GroupHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order GroupHistories. */
  field: GroupHistoryOrderField;
}

/** Properties by which GroupHistory connections can be ordered. */
export enum GroupHistoryOrderField {
  display_name = 'display_name',
  name = 'name'
}

/**
 * GroupHistoryWhereInput is used for filtering GroupHistory objects.
 * Input was generated by ent.
 */
export interface GroupHistoryWhereInput {
  and?: InputMaybe<Array<GroupHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<GroupHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupHistoryOpType>>;
  or?: InputMaybe<Array<GroupHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** GroupMembershipHistoryOpType is enum for the field operation */
export enum GroupMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** GroupMembershipHistoryRole is enum for the field role */
export enum GroupMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/**
 * GroupMembershipHistoryWhereInput is used for filtering GroupMembershipHistory objects.
 * Input was generated by ent.
 */
export interface GroupMembershipHistoryWhereInput {
  and?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>;
  groupIDContains?: InputMaybe<Scalars['String']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  groupIDGT?: InputMaybe<Scalars['String']['input']>;
  groupIDGTE?: InputMaybe<Scalars['String']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDLT?: InputMaybe<Scalars['String']['input']>;
  groupIDLTE?: InputMaybe<Scalars['String']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<GroupMembershipHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupMembershipHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupMembershipHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>;
  or?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<GroupMembershipHistoryRole>;
  roleIn?: InputMaybe<Array<GroupMembershipHistoryRole>>;
  roleNEQ?: InputMaybe<GroupMembershipHistoryRole>;
  roleNotIn?: InputMaybe<Array<GroupMembershipHistoryRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
}

/** GroupMembershipRole is enum for the field role */
export enum GroupMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/**
 * GroupMembershipWhereInput is used for filtering GroupMembership objects.
 * Input was generated by ent.
 */
export interface GroupMembershipWhereInput {
  and?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupID?: InputMaybe<Scalars['String']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<GroupMembershipWhereInput>;
  or?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<GroupMembershipRole>;
  roleIn?: InputMaybe<Array<GroupMembershipRole>>;
  roleNEQ?: InputMaybe<GroupMembershipRole>;
  roleNotIn?: InputMaybe<Array<GroupMembershipRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  userID?: InputMaybe<Scalars['String']['input']>;
}

/** Ordering options for Group connections */
export interface GroupOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Groups. */
  field: GroupOrderField;
}

/** Properties by which Group connections can be ordered. */
export enum GroupOrderField {
  display_name = 'display_name',
  name = 'name'
}

/** GroupSettingHistoryJoinPolicy is enum for the field join_policy */
export enum GroupSettingHistoryJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN'
}

/** GroupSettingHistoryOpType is enum for the field operation */
export enum GroupSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** GroupSettingHistoryVisibility is enum for the field visibility */
export enum GroupSettingHistoryVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC'
}

/**
 * GroupSettingHistoryWhereInput is used for filtering GroupSettingHistory objects.
 * Input was generated by ent.
 */
export interface GroupSettingHistoryWhereInput {
  and?: InputMaybe<Array<GroupSettingHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>;
  groupIDContains?: InputMaybe<Scalars['String']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  groupIDGT?: InputMaybe<Scalars['String']['input']>;
  groupIDGTE?: InputMaybe<Scalars['String']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDLT?: InputMaybe<Scalars['String']['input']>;
  groupIDLTE?: InputMaybe<Scalars['String']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingHistoryJoinPolicy>;
  joinPolicyIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>;
  joinPolicyNEQ?: InputMaybe<GroupSettingHistoryJoinPolicy>;
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>;
  not?: InputMaybe<GroupSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupSettingHistoryOpType>>;
  or?: InputMaybe<Array<GroupSettingHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingHistoryVisibility>;
  visibilityIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>;
  visibilityNEQ?: InputMaybe<GroupSettingHistoryVisibility>;
  visibilityNotIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>;
}

/** GroupSettingJoinPolicy is enum for the field join_policy */
export enum GroupSettingJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN'
}

/** GroupSettingVisibility is enum for the field visibility */
export enum GroupSettingVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC'
}

/**
 * GroupSettingWhereInput is used for filtering GroupSetting objects.
 * Input was generated by ent.
 */
export interface GroupSettingWhereInput {
  and?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['ID']['input']>;
  groupIDContains?: InputMaybe<Scalars['ID']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  groupIDGT?: InputMaybe<Scalars['ID']['input']>;
  groupIDGTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDLT?: InputMaybe<Scalars['ID']['input']>;
  groupIDLTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  joinPolicyIn?: InputMaybe<Array<GroupSettingJoinPolicy>>;
  joinPolicyNEQ?: InputMaybe<GroupSettingJoinPolicy>;
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingJoinPolicy>>;
  not?: InputMaybe<GroupSettingWhereInput>;
  or?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingVisibility>;
  visibilityIn?: InputMaybe<Array<GroupSettingVisibility>>;
  visibilityNEQ?: InputMaybe<GroupSettingVisibility>;
  visibilityNotIn?: InputMaybe<Array<GroupSettingVisibility>>;
}

/**
 * GroupWhereInput is used for filtering Group objects.
 * Input was generated by ent.
 */
export interface GroupWhereInput {
  and?: InputMaybe<Array<GroupWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** features edge predicates */
  hasFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  hasFeaturesWith?: InputMaybe<Array<FeatureWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>;
  hasMembersWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<GroupWhereInput>;
  or?: InputMaybe<Array<GroupWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** HushHistoryOpType is enum for the field operation */
export enum HushHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for HushHistory connections */
export interface HushHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order HushHistories. */
  field: HushHistoryOrderField;
}

/** Properties by which HushHistory connections can be ordered. */
export enum HushHistoryOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * HushHistoryWhereInput is used for filtering HushHistory objects.
 * Input was generated by ent.
 */
export interface HushHistoryWhereInput {
  and?: InputMaybe<Array<HushHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<HushHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<HushHistoryOpType>;
  operationIn?: InputMaybe<Array<HushHistoryOpType>>;
  operationNEQ?: InputMaybe<HushHistoryOpType>;
  operationNotIn?: InputMaybe<Array<HushHistoryOpType>>;
  or?: InputMaybe<Array<HushHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>;
  secretNameContains?: InputMaybe<Scalars['String']['input']>;
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  secretNameGT?: InputMaybe<Scalars['String']['input']>;
  secretNameGTE?: InputMaybe<Scalars['String']['input']>;
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  secretNameLT?: InputMaybe<Scalars['String']['input']>;
  secretNameLTE?: InputMaybe<Scalars['String']['input']>;
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>;
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Hush connections */
export interface HushOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Hushes. */
  field: HushOrderField;
}

/** Properties by which Hush connections can be ordered. */
export enum HushOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * HushWhereInput is used for filtering Hush objects.
 * Input was generated by ent.
 */
export interface HushWhereInput {
  and?: InputMaybe<Array<HushWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<HushWhereInput>;
  or?: InputMaybe<Array<HushWhereInput>>;
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>;
  secretNameContains?: InputMaybe<Scalars['String']['input']>;
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  secretNameGT?: InputMaybe<Scalars['String']['input']>;
  secretNameGTE?: InputMaybe<Scalars['String']['input']>;
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  secretNameLT?: InputMaybe<Scalars['String']['input']>;
  secretNameLTE?: InputMaybe<Scalars['String']['input']>;
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>;
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** IntegrationHistoryOpType is enum for the field operation */
export enum IntegrationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for IntegrationHistory connections */
export interface IntegrationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order IntegrationHistories. */
  field: IntegrationHistoryOrderField;
}

/** Properties by which IntegrationHistory connections can be ordered. */
export enum IntegrationHistoryOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * IntegrationHistoryWhereInput is used for filtering IntegrationHistory objects.
 * Input was generated by ent.
 */
export interface IntegrationHistoryWhereInput {
  and?: InputMaybe<Array<IntegrationHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<IntegrationHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<IntegrationHistoryOpType>;
  operationIn?: InputMaybe<Array<IntegrationHistoryOpType>>;
  operationNEQ?: InputMaybe<IntegrationHistoryOpType>;
  operationNotIn?: InputMaybe<Array<IntegrationHistoryOpType>>;
  or?: InputMaybe<Array<IntegrationHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Integration connections */
export interface IntegrationOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Integrations. */
  field: IntegrationOrderField;
}

/** Properties by which Integration connections can be ordered. */
export enum IntegrationOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * IntegrationWhereInput is used for filtering Integration objects.
 * Input was generated by ent.
 */
export interface IntegrationWhereInput {
  and?: InputMaybe<Array<IntegrationWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** oauth2tokens edge predicates */
  hasOauth2tokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasOauth2tokensWith?: InputMaybe<Array<OhAuthTooTokenWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<IntegrationWhereInput>;
  or?: InputMaybe<Array<IntegrationWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** InviteInviteStatus is enum for the field status */
export enum InviteInviteStatus {
  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',
  INVITATION_ACCEPTED = 'INVITATION_ACCEPTED',
  INVITATION_EXPIRED = 'INVITATION_EXPIRED',
  INVITATION_SENT = 'INVITATION_SENT'
}

/** InviteRole is enum for the field role */
export enum InviteRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/**
 * InviteWhereInput is used for filtering Invite objects.
 * Input was generated by ent.
 */
export interface InviteWhereInput {
  and?: InputMaybe<Array<InviteWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires field predicates */
  expires?: InputMaybe<Scalars['Time']['input']>;
  expiresGT?: InputMaybe<Scalars['Time']['input']>;
  expiresGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresLT?: InputMaybe<Scalars['Time']['input']>;
  expiresLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<InviteWhereInput>;
  or?: InputMaybe<Array<InviteWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** recipient field predicates */
  recipient?: InputMaybe<Scalars['String']['input']>;
  recipientContains?: InputMaybe<Scalars['String']['input']>;
  recipientContainsFold?: InputMaybe<Scalars['String']['input']>;
  recipientEqualFold?: InputMaybe<Scalars['String']['input']>;
  recipientGT?: InputMaybe<Scalars['String']['input']>;
  recipientGTE?: InputMaybe<Scalars['String']['input']>;
  recipientHasPrefix?: InputMaybe<Scalars['String']['input']>;
  recipientHasSuffix?: InputMaybe<Scalars['String']['input']>;
  recipientIn?: InputMaybe<Array<Scalars['String']['input']>>;
  recipientLT?: InputMaybe<Scalars['String']['input']>;
  recipientLTE?: InputMaybe<Scalars['String']['input']>;
  recipientNEQ?: InputMaybe<Scalars['String']['input']>;
  recipientNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** requestor_id field predicates */
  requestorID?: InputMaybe<Scalars['String']['input']>;
  requestorIDContains?: InputMaybe<Scalars['String']['input']>;
  requestorIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  requestorIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  requestorIDGT?: InputMaybe<Scalars['String']['input']>;
  requestorIDGTE?: InputMaybe<Scalars['String']['input']>;
  requestorIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  requestorIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  requestorIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  requestorIDLT?: InputMaybe<Scalars['String']['input']>;
  requestorIDLTE?: InputMaybe<Scalars['String']['input']>;
  requestorIDNEQ?: InputMaybe<Scalars['String']['input']>;
  requestorIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** role field predicates */
  role?: InputMaybe<InviteRole>;
  roleIn?: InputMaybe<Array<InviteRole>>;
  roleNEQ?: InputMaybe<InviteRole>;
  roleNotIn?: InputMaybe<Array<InviteRole>>;
  /** send_attempts field predicates */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsGT?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsGTE?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sendAttemptsLT?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsLTE?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsNEQ?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** status field predicates */
  status?: InputMaybe<InviteInviteStatus>;
  statusIn?: InputMaybe<Array<InviteInviteStatus>>;
  statusNEQ?: InputMaybe<InviteInviteStatus>;
  statusNotIn?: InputMaybe<Array<InviteInviteStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** OauthProviderHistoryOpType is enum for the field operation */
export enum OauthProviderHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * OauthProviderHistoryWhereInput is used for filtering OauthProviderHistory objects.
 * Input was generated by ent.
 */
export interface OauthProviderHistoryWhereInput {
  and?: InputMaybe<Array<OauthProviderHistoryWhereInput>>;
  /** auth_style field predicates */
  authStyle?: InputMaybe<Scalars['Uint']['input']>;
  authStyleGT?: InputMaybe<Scalars['Uint']['input']>;
  authStyleGTE?: InputMaybe<Scalars['Uint']['input']>;
  authStyleIn?: InputMaybe<Array<Scalars['Uint']['input']>>;
  authStyleLT?: InputMaybe<Scalars['Uint']['input']>;
  authStyleLTE?: InputMaybe<Scalars['Uint']['input']>;
  authStyleNEQ?: InputMaybe<Scalars['Uint']['input']>;
  authStyleNotIn?: InputMaybe<Array<Scalars['Uint']['input']>>;
  /** auth_url field predicates */
  authURL?: InputMaybe<Scalars['String']['input']>;
  authURLContains?: InputMaybe<Scalars['String']['input']>;
  authURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  authURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  authURLGT?: InputMaybe<Scalars['String']['input']>;
  authURLGTE?: InputMaybe<Scalars['String']['input']>;
  authURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  authURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  authURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  authURLLT?: InputMaybe<Scalars['String']['input']>;
  authURLLTE?: InputMaybe<Scalars['String']['input']>;
  authURLNEQ?: InputMaybe<Scalars['String']['input']>;
  authURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** client_id field predicates */
  clientID?: InputMaybe<Scalars['String']['input']>;
  clientIDContains?: InputMaybe<Scalars['String']['input']>;
  clientIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  clientIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  clientIDGT?: InputMaybe<Scalars['String']['input']>;
  clientIDGTE?: InputMaybe<Scalars['String']['input']>;
  clientIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  clientIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  clientIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  clientIDLT?: InputMaybe<Scalars['String']['input']>;
  clientIDLTE?: InputMaybe<Scalars['String']['input']>;
  clientIDNEQ?: InputMaybe<Scalars['String']['input']>;
  clientIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** client_secret field predicates */
  clientSecret?: InputMaybe<Scalars['String']['input']>;
  clientSecretContains?: InputMaybe<Scalars['String']['input']>;
  clientSecretContainsFold?: InputMaybe<Scalars['String']['input']>;
  clientSecretEqualFold?: InputMaybe<Scalars['String']['input']>;
  clientSecretGT?: InputMaybe<Scalars['String']['input']>;
  clientSecretGTE?: InputMaybe<Scalars['String']['input']>;
  clientSecretHasPrefix?: InputMaybe<Scalars['String']['input']>;
  clientSecretHasSuffix?: InputMaybe<Scalars['String']['input']>;
  clientSecretIn?: InputMaybe<Array<Scalars['String']['input']>>;
  clientSecretLT?: InputMaybe<Scalars['String']['input']>;
  clientSecretLTE?: InputMaybe<Scalars['String']['input']>;
  clientSecretNEQ?: InputMaybe<Scalars['String']['input']>;
  clientSecretNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** info_url field predicates */
  infoURL?: InputMaybe<Scalars['String']['input']>;
  infoURLContains?: InputMaybe<Scalars['String']['input']>;
  infoURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  infoURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  infoURLGT?: InputMaybe<Scalars['String']['input']>;
  infoURLGTE?: InputMaybe<Scalars['String']['input']>;
  infoURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  infoURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  infoURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  infoURLLT?: InputMaybe<Scalars['String']['input']>;
  infoURLLTE?: InputMaybe<Scalars['String']['input']>;
  infoURLNEQ?: InputMaybe<Scalars['String']['input']>;
  infoURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<OauthProviderHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OauthProviderHistoryOpType>;
  operationIn?: InputMaybe<Array<OauthProviderHistoryOpType>>;
  operationNEQ?: InputMaybe<OauthProviderHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OauthProviderHistoryOpType>>;
  or?: InputMaybe<Array<OauthProviderHistoryWhereInput>>;
  /** redirect_url field predicates */
  redirectURL?: InputMaybe<Scalars['String']['input']>;
  redirectURLContains?: InputMaybe<Scalars['String']['input']>;
  redirectURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  redirectURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  redirectURLGT?: InputMaybe<Scalars['String']['input']>;
  redirectURLGTE?: InputMaybe<Scalars['String']['input']>;
  redirectURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  redirectURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  redirectURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  redirectURLLT?: InputMaybe<Scalars['String']['input']>;
  redirectURLLTE?: InputMaybe<Scalars['String']['input']>;
  redirectURLNEQ?: InputMaybe<Scalars['String']['input']>;
  redirectURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** scopes field predicates */
  scopes?: InputMaybe<Scalars['String']['input']>;
  scopesContains?: InputMaybe<Scalars['String']['input']>;
  scopesContainsFold?: InputMaybe<Scalars['String']['input']>;
  scopesEqualFold?: InputMaybe<Scalars['String']['input']>;
  scopesGT?: InputMaybe<Scalars['String']['input']>;
  scopesGTE?: InputMaybe<Scalars['String']['input']>;
  scopesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  scopesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  scopesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  scopesLT?: InputMaybe<Scalars['String']['input']>;
  scopesLTE?: InputMaybe<Scalars['String']['input']>;
  scopesNEQ?: InputMaybe<Scalars['String']['input']>;
  scopesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** token_url field predicates */
  tokenURL?: InputMaybe<Scalars['String']['input']>;
  tokenURLContains?: InputMaybe<Scalars['String']['input']>;
  tokenURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  tokenURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  tokenURLGT?: InputMaybe<Scalars['String']['input']>;
  tokenURLGTE?: InputMaybe<Scalars['String']['input']>;
  tokenURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tokenURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tokenURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tokenURLLT?: InputMaybe<Scalars['String']['input']>;
  tokenURLLTE?: InputMaybe<Scalars['String']['input']>;
  tokenURLNEQ?: InputMaybe<Scalars['String']['input']>;
  tokenURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * OauthProviderWhereInput is used for filtering OauthProvider objects.
 * Input was generated by ent.
 */
export interface OauthProviderWhereInput {
  and?: InputMaybe<Array<OauthProviderWhereInput>>;
  /** auth_style field predicates */
  authStyle?: InputMaybe<Scalars['Uint']['input']>;
  authStyleGT?: InputMaybe<Scalars['Uint']['input']>;
  authStyleGTE?: InputMaybe<Scalars['Uint']['input']>;
  authStyleIn?: InputMaybe<Array<Scalars['Uint']['input']>>;
  authStyleLT?: InputMaybe<Scalars['Uint']['input']>;
  authStyleLTE?: InputMaybe<Scalars['Uint']['input']>;
  authStyleNEQ?: InputMaybe<Scalars['Uint']['input']>;
  authStyleNotIn?: InputMaybe<Array<Scalars['Uint']['input']>>;
  /** auth_url field predicates */
  authURL?: InputMaybe<Scalars['String']['input']>;
  authURLContains?: InputMaybe<Scalars['String']['input']>;
  authURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  authURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  authURLGT?: InputMaybe<Scalars['String']['input']>;
  authURLGTE?: InputMaybe<Scalars['String']['input']>;
  authURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  authURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  authURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  authURLLT?: InputMaybe<Scalars['String']['input']>;
  authURLLTE?: InputMaybe<Scalars['String']['input']>;
  authURLNEQ?: InputMaybe<Scalars['String']['input']>;
  authURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** client_id field predicates */
  clientID?: InputMaybe<Scalars['String']['input']>;
  clientIDContains?: InputMaybe<Scalars['String']['input']>;
  clientIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  clientIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  clientIDGT?: InputMaybe<Scalars['String']['input']>;
  clientIDGTE?: InputMaybe<Scalars['String']['input']>;
  clientIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  clientIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  clientIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  clientIDLT?: InputMaybe<Scalars['String']['input']>;
  clientIDLTE?: InputMaybe<Scalars['String']['input']>;
  clientIDNEQ?: InputMaybe<Scalars['String']['input']>;
  clientIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** client_secret field predicates */
  clientSecret?: InputMaybe<Scalars['String']['input']>;
  clientSecretContains?: InputMaybe<Scalars['String']['input']>;
  clientSecretContainsFold?: InputMaybe<Scalars['String']['input']>;
  clientSecretEqualFold?: InputMaybe<Scalars['String']['input']>;
  clientSecretGT?: InputMaybe<Scalars['String']['input']>;
  clientSecretGTE?: InputMaybe<Scalars['String']['input']>;
  clientSecretHasPrefix?: InputMaybe<Scalars['String']['input']>;
  clientSecretHasSuffix?: InputMaybe<Scalars['String']['input']>;
  clientSecretIn?: InputMaybe<Array<Scalars['String']['input']>>;
  clientSecretLT?: InputMaybe<Scalars['String']['input']>;
  clientSecretLTE?: InputMaybe<Scalars['String']['input']>;
  clientSecretNEQ?: InputMaybe<Scalars['String']['input']>;
  clientSecretNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** info_url field predicates */
  infoURL?: InputMaybe<Scalars['String']['input']>;
  infoURLContains?: InputMaybe<Scalars['String']['input']>;
  infoURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  infoURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  infoURLGT?: InputMaybe<Scalars['String']['input']>;
  infoURLGTE?: InputMaybe<Scalars['String']['input']>;
  infoURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  infoURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  infoURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  infoURLLT?: InputMaybe<Scalars['String']['input']>;
  infoURLLTE?: InputMaybe<Scalars['String']['input']>;
  infoURLNEQ?: InputMaybe<Scalars['String']['input']>;
  infoURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<OauthProviderWhereInput>;
  or?: InputMaybe<Array<OauthProviderWhereInput>>;
  /** redirect_url field predicates */
  redirectURL?: InputMaybe<Scalars['String']['input']>;
  redirectURLContains?: InputMaybe<Scalars['String']['input']>;
  redirectURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  redirectURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  redirectURLGT?: InputMaybe<Scalars['String']['input']>;
  redirectURLGTE?: InputMaybe<Scalars['String']['input']>;
  redirectURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  redirectURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  redirectURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  redirectURLLT?: InputMaybe<Scalars['String']['input']>;
  redirectURLLTE?: InputMaybe<Scalars['String']['input']>;
  redirectURLNEQ?: InputMaybe<Scalars['String']['input']>;
  redirectURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** scopes field predicates */
  scopes?: InputMaybe<Scalars['String']['input']>;
  scopesContains?: InputMaybe<Scalars['String']['input']>;
  scopesContainsFold?: InputMaybe<Scalars['String']['input']>;
  scopesEqualFold?: InputMaybe<Scalars['String']['input']>;
  scopesGT?: InputMaybe<Scalars['String']['input']>;
  scopesGTE?: InputMaybe<Scalars['String']['input']>;
  scopesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  scopesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  scopesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  scopesLT?: InputMaybe<Scalars['String']['input']>;
  scopesLTE?: InputMaybe<Scalars['String']['input']>;
  scopesNEQ?: InputMaybe<Scalars['String']['input']>;
  scopesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** token_url field predicates */
  tokenURL?: InputMaybe<Scalars['String']['input']>;
  tokenURLContains?: InputMaybe<Scalars['String']['input']>;
  tokenURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  tokenURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  tokenURLGT?: InputMaybe<Scalars['String']['input']>;
  tokenURLGTE?: InputMaybe<Scalars['String']['input']>;
  tokenURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tokenURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tokenURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tokenURLLT?: InputMaybe<Scalars['String']['input']>;
  tokenURLLTE?: InputMaybe<Scalars['String']['input']>;
  tokenURLNEQ?: InputMaybe<Scalars['String']['input']>;
  tokenURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * OhAuthTooTokenWhereInput is used for filtering OhAuthTooToken objects.
 * Input was generated by ent.
 */
export interface OhAuthTooTokenWhereInput {
  and?: InputMaybe<Array<OhAuthTooTokenWhereInput>>;
  /** claims_email field predicates */
  claimsEmail?: InputMaybe<Scalars['String']['input']>;
  claimsEmailContains?: InputMaybe<Scalars['String']['input']>;
  claimsEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  claimsEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  claimsEmailGT?: InputMaybe<Scalars['String']['input']>;
  claimsEmailGTE?: InputMaybe<Scalars['String']['input']>;
  claimsEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  claimsEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  claimsEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsEmailLT?: InputMaybe<Scalars['String']['input']>;
  claimsEmailLTE?: InputMaybe<Scalars['String']['input']>;
  claimsEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  claimsEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** claims_email_verified field predicates */
  claimsEmailVerified?: InputMaybe<Scalars['Boolean']['input']>;
  claimsEmailVerifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** claims_preferred_username field predicates */
  claimsPreferredUsername?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameContains?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameContainsFold?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameEqualFold?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameGT?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameGTE?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsPreferredUsernameLT?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameLTE?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameNEQ?: InputMaybe<Scalars['String']['input']>;
  claimsPreferredUsernameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** claims_user_id field predicates */
  claimsUserID?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDContains?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDGT?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDGTE?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsUserIDLT?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDLTE?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDNEQ?: InputMaybe<Scalars['String']['input']>;
  claimsUserIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** claims_username field predicates */
  claimsUsername?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameContains?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameContainsFold?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameEqualFold?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameGT?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameGTE?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsUsernameLT?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameLTE?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameNEQ?: InputMaybe<Scalars['String']['input']>;
  claimsUsernameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** client_id field predicates */
  clientID?: InputMaybe<Scalars['String']['input']>;
  clientIDContains?: InputMaybe<Scalars['String']['input']>;
  clientIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  clientIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  clientIDGT?: InputMaybe<Scalars['String']['input']>;
  clientIDGTE?: InputMaybe<Scalars['String']['input']>;
  clientIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  clientIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  clientIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  clientIDLT?: InputMaybe<Scalars['String']['input']>;
  clientIDLTE?: InputMaybe<Scalars['String']['input']>;
  clientIDNEQ?: InputMaybe<Scalars['String']['input']>;
  clientIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** connector_id field predicates */
  connectorID?: InputMaybe<Scalars['String']['input']>;
  connectorIDContains?: InputMaybe<Scalars['String']['input']>;
  connectorIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  connectorIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  connectorIDGT?: InputMaybe<Scalars['String']['input']>;
  connectorIDGTE?: InputMaybe<Scalars['String']['input']>;
  connectorIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  connectorIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  connectorIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  connectorIDLT?: InputMaybe<Scalars['String']['input']>;
  connectorIDLTE?: InputMaybe<Scalars['String']['input']>;
  connectorIDNEQ?: InputMaybe<Scalars['String']['input']>;
  connectorIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** integration edge predicates */
  hasIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_used field predicates */
  lastUsed?: InputMaybe<Scalars['Time']['input']>;
  lastUsedGT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedGTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedLT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedLTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastUsedNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** nonce field predicates */
  nonce?: InputMaybe<Scalars['String']['input']>;
  nonceContains?: InputMaybe<Scalars['String']['input']>;
  nonceContainsFold?: InputMaybe<Scalars['String']['input']>;
  nonceEqualFold?: InputMaybe<Scalars['String']['input']>;
  nonceGT?: InputMaybe<Scalars['String']['input']>;
  nonceGTE?: InputMaybe<Scalars['String']['input']>;
  nonceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nonceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nonceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nonceLT?: InputMaybe<Scalars['String']['input']>;
  nonceLTE?: InputMaybe<Scalars['String']['input']>;
  nonceNEQ?: InputMaybe<Scalars['String']['input']>;
  nonceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<OhAuthTooTokenWhereInput>;
  or?: InputMaybe<Array<OhAuthTooTokenWhereInput>>;
}

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  ASC = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  DESC = 'DESC'
}

/** OrgMembershipHistoryOpType is enum for the field operation */
export enum OrgMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** OrgMembershipHistoryRole is enum for the field role */
export enum OrgMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER',
  USER = 'USER'
}

/**
 * OrgMembershipHistoryWhereInput is used for filtering OrgMembershipHistory objects.
 * Input was generated by ent.
 */
export interface OrgMembershipHistoryWhereInput {
  and?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgMembershipHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrgMembershipHistoryOpType>;
  operationIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>;
  operationNEQ?: InputMaybe<OrgMembershipHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>;
  or?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>;
  organizationIDContains?: InputMaybe<Scalars['String']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDGT?: InputMaybe<Scalars['String']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDLT?: InputMaybe<Scalars['String']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<OrgMembershipHistoryRole>;
  roleIn?: InputMaybe<Array<OrgMembershipHistoryRole>>;
  roleNEQ?: InputMaybe<OrgMembershipHistoryRole>;
  roleNotIn?: InputMaybe<Array<OrgMembershipHistoryRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
}

/** OrgMembershipRole is enum for the field role */
export enum OrgMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER',
  USER = 'USER'
}

/**
 * OrgMembershipWhereInput is used for filtering OrgMembership objects.
 * Input was generated by ent.
 */
export interface OrgMembershipWhereInput {
  and?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgMembershipWhereInput>;
  or?: InputMaybe<Array<OrgMembershipWhereInput>>;
  organizationID?: InputMaybe<Scalars['String']['input']>;
  /** role field predicates */
  role?: InputMaybe<OrgMembershipRole>;
  roleIn?: InputMaybe<Array<OrgMembershipRole>>;
  roleNEQ?: InputMaybe<OrgMembershipRole>;
  roleNotIn?: InputMaybe<Array<OrgMembershipRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  userID?: InputMaybe<Scalars['String']['input']>;
}

/** OrganizationHistoryOpType is enum for the field operation */
export enum OrganizationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for OrganizationHistory connections */
export interface OrganizationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order OrganizationHistories. */
  field: OrganizationHistoryOrderField;
}

/** Properties by which OrganizationHistory connections can be ordered. */
export enum OrganizationHistoryOrderField {
  display_name = 'display_name',
  name = 'name'
}

/**
 * OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationHistoryWhereInput>>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrganizationHistoryOpType>;
  operationIn?: InputMaybe<Array<OrganizationHistoryOpType>>;
  operationNEQ?: InputMaybe<OrganizationHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrganizationHistoryOpType>>;
  or?: InputMaybe<Array<OrganizationHistoryWhereInput>>;
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Organization connections */
export interface OrganizationOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Organizations. */
  field: OrganizationOrderField;
}

/** Properties by which Organization connections can be ordered. */
export enum OrganizationOrderField {
  display_name = 'display_name',
  name = 'name'
}

/** OrganizationSettingHistoryOpType is enum for the field operation */
export enum OrganizationSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** OrganizationSettingHistoryRegion is enum for the field geo_location */
export enum OrganizationSettingHistoryRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA'
}

/**
 * OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>;
  /** billing_address field predicates */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  billingAddressContains?: InputMaybe<Scalars['String']['input']>;
  billingAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressGT?: InputMaybe<Scalars['String']['input']>;
  billingAddressGTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingAddressLT?: InputMaybe<Scalars['String']['input']>;
  billingAddressLTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  billingAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  billingContactContains?: InputMaybe<Scalars['String']['input']>;
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingContactGT?: InputMaybe<Scalars['String']['input']>;
  billingContactGTE?: InputMaybe<Scalars['String']['input']>;
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingContactLT?: InputMaybe<Scalars['String']['input']>;
  billingContactLTE?: InputMaybe<Scalars['String']['input']>;
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>;
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  billingEmailContains?: InputMaybe<Scalars['String']['input']>;
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailGT?: InputMaybe<Scalars['String']['input']>;
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingEmailLT?: InputMaybe<Scalars['String']['input']>;
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingHistoryRegion>;
  geoLocationIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>;
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  geoLocationNEQ?: InputMaybe<OrganizationSettingHistoryRegion>;
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>;
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrganizationSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<OrganizationSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>;
  or?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>;
  organizationIDContains?: InputMaybe<Scalars['String']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDGT?: InputMaybe<Scalars['String']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  organizationIDLT?: InputMaybe<Scalars['String']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** OrganizationSettingRegion is enum for the field geo_location */
export enum OrganizationSettingRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA'
}

/**
 * OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingWhereInput {
  and?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** billing_address field predicates */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  billingAddressContains?: InputMaybe<Scalars['String']['input']>;
  billingAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressGT?: InputMaybe<Scalars['String']['input']>;
  billingAddressGTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingAddressLT?: InputMaybe<Scalars['String']['input']>;
  billingAddressLTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  billingAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  billingContactContains?: InputMaybe<Scalars['String']['input']>;
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingContactGT?: InputMaybe<Scalars['String']['input']>;
  billingContactGTE?: InputMaybe<Scalars['String']['input']>;
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingContactLT?: InputMaybe<Scalars['String']['input']>;
  billingContactLTE?: InputMaybe<Scalars['String']['input']>;
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>;
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  billingEmailContains?: InputMaybe<Scalars['String']['input']>;
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailGT?: InputMaybe<Scalars['String']['input']>;
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingEmailLT?: InputMaybe<Scalars['String']['input']>;
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  geoLocationIn?: InputMaybe<Array<OrganizationSettingRegion>>;
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  geoLocationNEQ?: InputMaybe<OrganizationSettingRegion>;
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingRegion>>;
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationSettingWhereInput>;
  or?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  organizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  organizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  organizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * OrganizationWhereInput is used for filtering Organization objects.
 * Input was generated by ent.
 */
export interface OrganizationWhereInput {
  and?: InputMaybe<Array<OrganizationWhereInput>>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** api_tokens edge predicates */
  hasAPITokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasAPITokensWith?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** children edge predicates */
  hasChildren?: InputMaybe<Scalars['Boolean']['input']>;
  hasChildrenWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** entitlements edge predicates */
  hasEntitlements?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitlementsWith?: InputMaybe<Array<EntitlementWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** features edge predicates */
  hasFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  hasFeaturesWith?: InputMaybe<Array<FeatureWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** invites edge predicates */
  hasInvites?: InputMaybe<Scalars['Boolean']['input']>;
  hasInvitesWith?: InputMaybe<Array<InviteWhereInput>>;
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>;
  hasMembersWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** oauthprovider edge predicates */
  hasOauthprovider?: InputMaybe<Scalars['Boolean']['input']>;
  hasOauthproviderWith?: InputMaybe<Array<OauthProviderWhereInput>>;
  /** parent edge predicates */
  hasParent?: InputMaybe<Scalars['Boolean']['input']>;
  hasParentWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** subscribers edge predicates */
  hasSubscribers?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscribersWith?: InputMaybe<Array<SubscriberWhereInput>>;
  /** templates edge predicates */
  hasTemplates?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplatesWith?: InputMaybe<Array<TemplateWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** webhooks edge predicates */
  hasWebhooks?: InputMaybe<Scalars['Boolean']['input']>;
  hasWebhooksWith?: InputMaybe<Array<WebhookWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationWhereInput>;
  or?: InputMaybe<Array<OrganizationWhereInput>>;
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
 * Input was generated by ent.
 */
export interface PersonalAccessTokenWhereInput {
  and?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<PersonalAccessTokenWhereInput>;
  or?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * SubscriberWhereInput is used for filtering Subscriber objects.
 * Input was generated by ent.
 */
export interface SubscriberWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<SubscriberWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<SubscriberWhereInput>;
  or?: InputMaybe<Array<SubscriberWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified_email field predicates */
  verifiedEmail?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedEmailNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified_phone field predicates */
  verifiedPhone?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedPhoneNEQ?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * TFASettingWhereInput is used for filtering TFASetting objects.
 * Input was generated by ent.
 */
export interface TfaSettingWhereInput {
  and?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TfaSettingWhereInput>;
  or?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** tfa_secret field predicates */
  tfaSecret?: InputMaybe<Scalars['String']['input']>;
  tfaSecretContains?: InputMaybe<Scalars['String']['input']>;
  tfaSecretContainsFold?: InputMaybe<Scalars['String']['input']>;
  tfaSecretEqualFold?: InputMaybe<Scalars['String']['input']>;
  tfaSecretGT?: InputMaybe<Scalars['String']['input']>;
  tfaSecretGTE?: InputMaybe<Scalars['String']['input']>;
  tfaSecretHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tfaSecretHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tfaSecretIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tfaSecretIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  tfaSecretLT?: InputMaybe<Scalars['String']['input']>;
  tfaSecretLTE?: InputMaybe<Scalars['String']['input']>;
  tfaSecretNEQ?: InputMaybe<Scalars['String']['input']>;
  tfaSecretNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tfaSecretNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** totp_allowed field predicates */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified field predicates */
  verified?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
}

/** TemplateDocumentType is enum for the field template_type */
export enum TemplateDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE'
}

/** TemplateHistoryDocumentType is enum for the field template_type */
export enum TemplateHistoryDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE'
}

/** TemplateHistoryOpType is enum for the field operation */
export enum TemplateHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for TemplateHistory connections */
export interface TemplateHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order TemplateHistories. */
  field: TemplateHistoryOrderField;
}

/** Properties by which TemplateHistory connections can be ordered. */
export enum TemplateHistoryOrderField {
  name = 'name'
}

/**
 * TemplateHistoryWhereInput is used for filtering TemplateHistory objects.
 * Input was generated by ent.
 */
export interface TemplateHistoryWhereInput {
  and?: InputMaybe<Array<TemplateHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<TemplateHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<TemplateHistoryOpType>;
  operationIn?: InputMaybe<Array<TemplateHistoryOpType>>;
  operationNEQ?: InputMaybe<TemplateHistoryOpType>;
  operationNotIn?: InputMaybe<Array<TemplateHistoryOpType>>;
  or?: InputMaybe<Array<TemplateHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateHistoryDocumentType>;
  templateTypeIn?: InputMaybe<Array<TemplateHistoryDocumentType>>;
  templateTypeNEQ?: InputMaybe<TemplateHistoryDocumentType>;
  templateTypeNotIn?: InputMaybe<Array<TemplateHistoryDocumentType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Template connections */
export interface TemplateOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Templates. */
  field: TemplateOrderField;
}

/** Properties by which Template connections can be ordered. */
export enum TemplateOrderField {
  name = 'name'
}

/**
 * TemplateWhereInput is used for filtering Template objects.
 * Input was generated by ent.
 */
export interface TemplateWhereInput {
  and?: InputMaybe<Array<TemplateWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<TemplateWhereInput>;
  or?: InputMaybe<Array<TemplateWhereInput>>;
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateDocumentType>;
  templateTypeIn?: InputMaybe<Array<TemplateDocumentType>>;
  templateTypeNEQ?: InputMaybe<TemplateDocumentType>;
  templateTypeNotIn?: InputMaybe<Array<TemplateDocumentType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UpdateAPITokenInput is used for update APIToken object.
 * Input was generated by ent.
 */
export interface UpdateApiTokenInput {
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateDocumentDataInput is used for update DocumentData object.
 * Input was generated by ent.
 */
export interface UpdateDocumentDataInput {
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** the json data of the document */
  data?: InputMaybe<Scalars['JSON']['input']>;
  templateID?: InputMaybe<Scalars['ID']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateEntitlementInput is used for update Entitlement object.
 * Input was generated by ent.
 */
export interface UpdateEntitlementInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at */
  cancelled?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearExpiresAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearExternalCustomerID?: InputMaybe<Scalars['Boolean']['input']>;
  clearExternalSubscriptionID?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether or not the customers entitlement expires - expires_at will show the time */
  expires?: InputMaybe<Scalars['Boolean']['input']>;
  /** the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  /** used to store references to external systems, e.g. Stripe */
  externalCustomerID?: InputMaybe<Scalars['String']['input']>;
  /** used to store references to external systems, e.g. Stripe */
  externalSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  tier?: InputMaybe<EntitlementTier>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateEventInput is used for update Event object.
 * Input was generated by ent.
 */
export interface UpdateEventInput {
  addEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addHushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWebhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearCorrelationID?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntitlement?: InputMaybe<Scalars['Boolean']['input']>;
  clearEventID?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeature?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearHush?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  clearInvite?: InputMaybe<Scalars['Boolean']['input']>;
  clearMetadata?: InputMaybe<Scalars['Boolean']['input']>;
  clearOauth2token?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessToken?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubscriber?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  clearWebhook?: InputMaybe<Scalars['Boolean']['input']>;
  correlationID?: InputMaybe<Scalars['String']['input']>;
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['Map']['input']>;
  removeEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeHushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeWebhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateFeatureInput is used for update Feature object.
 * Input was generated by ent.
 */
export interface UpdateFeatureInput {
  addEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntitlements?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  global?: InputMaybe<Scalars['Boolean']['input']>;
  removeEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateFileInput is used for update File object.
 * Input was generated by ent.
 */
export interface UpdateFileInput {
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  annotation?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  clearAnnotation?: InputMaybe<Scalars['Boolean']['input']>;
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>;
  clearFileSize?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  contentType?: InputMaybe<Scalars['String']['input']>;
  fileExtension?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileSize?: InputMaybe<Scalars['Int']['input']>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  storeKey?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/**
 * UpdateGroupInput is used for update Group object.
 * Input was generated by ent.
 */
export interface UpdateGroupInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupMembers?: InputMaybe<Array<CreateGroupMembershipInput>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGravatarLogoURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearLogoURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: InputMaybe<Scalars['String']['input']>;
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>;
  /** the name of the group - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  updateGroupSettings?: InputMaybe<UpdateGroupSettingInput>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateGroupMembershipInput is used for update GroupMembership object.
 * Input was generated by ent.
 */
export interface UpdateGroupMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<GroupMembershipRole>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateGroupSettingInput is used for update GroupSetting object.
 * Input was generated by ent.
 */
export interface UpdateGroupSettingInput {
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearSyncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  clearSyncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>;
}

/**
 * UpdateHushInput is used for update Hush object.
 * Input was generated by ent.
 */
export interface UpdateHushInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearKind?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the logical name of the corresponding hush secret or it's general grouping */
  name?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateIntegrationInput is used for update Integration object.
 * Input was generated by ent.
 */
export interface UpdateIntegrationInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearKind?: InputMaybe<Scalars['Boolean']['input']>;
  clearOauth2tokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>;
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the name of the integration - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOauth2tokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateInviteInput is used for update Invite object.
 * Input was generated by ent.
 */
export interface UpdateInviteInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: InputMaybe<Scalars['Time']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization */
  recipient?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<InviteRole>;
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateOauthProviderInput is used for update OauthProvider object.
 * Input was generated by ent.
 */
export interface UpdateOauthProviderInput {
  /** the auth style, 0: auto detect 1: third party log in 2: log in with username and password */
  authStyle?: InputMaybe<Scalars['Uint']['input']>;
  /** the auth url of the provider */
  authURL?: InputMaybe<Scalars['String']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** the client id for the oauth provider */
  clientID?: InputMaybe<Scalars['String']['input']>;
  /** the client secret */
  clientSecret?: InputMaybe<Scalars['String']['input']>;
  /** the URL to request user information by token */
  infoURL?: InputMaybe<Scalars['String']['input']>;
  /** the oauth provider's name */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the redirect url */
  redirectURL?: InputMaybe<Scalars['String']['input']>;
  /** the scopes */
  scopes?: InputMaybe<Scalars['String']['input']>;
  /** the token url of the provider */
  tokenURL?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateOhAuthTooTokenInput is used for update OhAuthTooToken object.
 * Input was generated by ent.
 */
export interface UpdateOhAuthTooTokenInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendClaimsGroups?: InputMaybe<Array<Scalars['String']['input']>>;
  appendConnectorData?: InputMaybe<Array<Scalars['String']['input']>>;
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsEmail?: InputMaybe<Scalars['String']['input']>;
  claimsEmailVerified?: InputMaybe<Scalars['Boolean']['input']>;
  claimsGroups?: InputMaybe<Array<Scalars['String']['input']>>;
  claimsPreferredUsername?: InputMaybe<Scalars['String']['input']>;
  claimsUserID?: InputMaybe<Scalars['String']['input']>;
  claimsUsername?: InputMaybe<Scalars['String']['input']>;
  clearClaimsGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearConnectorData?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>;
  clientID?: InputMaybe<Scalars['String']['input']>;
  connectorData?: InputMaybe<Array<Scalars['String']['input']>>;
  connectorID?: InputMaybe<Scalars['String']['input']>;
  lastUsed?: InputMaybe<Scalars['Time']['input']>;
  nonce?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateOrgMembershipInput is used for update OrgMembership object.
 * Input was generated by ent.
 */
export interface UpdateOrgMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<OrgMembershipRole>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateOrganizationInput is used for update Organization object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationInput {
  addAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOauthproviderIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrgMembers?: InputMaybe<Array<CreateOrgMembershipInput>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWebhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  clearAPITokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntitlements?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearInvites?: InputMaybe<Scalars['Boolean']['input']>;
  clearOauthprovider?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  clearSetting?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubscribers?: InputMaybe<Scalars['Boolean']['input']>;
  clearTemplates?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  clearWebhooks?: InputMaybe<Scalars['Boolean']['input']>;
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  /** the name of the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  removeAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEntitlementIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOauthproviderIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeWebhookIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  updateOrgSettings?: InputMaybe<UpdateOrganizationSettingInput>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateOrganizationSettingInput is used for update OrganizationSetting object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationSettingInput {
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Address to send billing information to */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  clearBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingContact?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingEmail?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingPhone?: InputMaybe<Scalars['Boolean']['input']>;
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>;
  clearGeoLocation?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTaxIdentifier?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface UpdatePersonalAccessTokenInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateSubscriberInput is used for update Subscriber object.
 * Input was generated by ent.
 */
export interface UpdateSubscriberInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearPhoneNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** email address of the subscriber */
  email?: InputMaybe<Scalars['String']['input']>;
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateTFASettingInput is used for update TFASetting object.
 * Input was generated by ent.
 */
export interface UpdateTfaSettingInput {
  clearTotpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether to regenerate backup codes */
  regenBackupCodes?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  /** specifies if the TFA device has been verified */
  verified?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UpdateTemplateInput is used for update Template object.
 * Input was generated by ent.
 */
export interface UpdateTemplateInput {
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  clearUischema?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the jsonschema object of the template */
  jsonconfig?: InputMaybe<Scalars['JSON']['input']>;
  /** the name of the template */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>;
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateUserInput is used for update User object.
 * Input was generated by ent.
 */
export interface UpdateUserInput {
  addEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>;
  /** The user's local avatar file */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  clearAvatarLocalFile?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearEmailVerificationTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastSeen?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  clearPassword?: InputMaybe<Scalars['Boolean']['input']>;
  clearPasswordResetTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearRole?: InputMaybe<Scalars['Boolean']['input']>;
  clearSub?: InputMaybe<Scalars['Boolean']['input']>;
  clearTfaSettings?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearWebauthn?: InputMaybe<Scalars['Boolean']['input']>;
  /** The user's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>;
  removeEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFeatureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the user's role */
  role?: InputMaybe<UserRole>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateUserSettingInput is used for update UserSetting object.
 * Input was generated by ent.
 */
export interface UpdateUserSettingInput {
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>;
  clearIsTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  clearIsWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  clearSilencedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearSuspendedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>;
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>;
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  /** tags associated with the user */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/**
 * UpdateWebhookInput is used for update Webhook object.
 * Input was generated by ent.
 */
export interface UpdateWebhookInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFailures?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastError?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastResponse?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearUpdatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the webhook */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the url to send the webhook to */
  destinationURL?: InputMaybe<Scalars['String']['input']>;
  /** indicates if the webhook is active and enabled */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** the number of failures */
  failures?: InputMaybe<Scalars['Int']['input']>;
  /** the last error message */
  lastError?: InputMaybe<Scalars['String']['input']>;
  /** the last response */
  lastResponse?: InputMaybe<Scalars['String']['input']>;
  /** the name of the webhook */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
}

/** UserAuthProvider is enum for the field auth_provider */
export enum UserAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN'
}

/** UserHistoryAuthProvider is enum for the field auth_provider */
export enum UserHistoryAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN'
}

/** UserHistoryOpType is enum for the field operation */
export enum UserHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for UserHistory connections */
export interface UserHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order UserHistories. */
  field: UserHistoryOrderField;
}

/** Properties by which UserHistory connections can be ordered. */
export enum UserHistoryOrderField {
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name'
}

/** UserHistoryRole is enum for the field role */
export enum UserHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/**
 * UserHistoryWhereInput is used for filtering UserHistory objects.
 * Input was generated by ent.
 */
export interface UserHistoryWhereInput {
  and?: InputMaybe<Array<UserHistoryWhereInput>>;
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserHistoryAuthProvider>;
  authProviderIn?: InputMaybe<Array<UserHistoryAuthProvider>>;
  authProviderNEQ?: InputMaybe<UserHistoryAuthProvider>;
  authProviderNotIn?: InputMaybe<Array<UserHistoryAuthProvider>>;
  /** avatar_local_file field predicates */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContains?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileLT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileLTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<UserHistoryOpType>;
  operationIn?: InputMaybe<Array<UserHistoryOpType>>;
  operationNEQ?: InputMaybe<UserHistoryOpType>;
  operationNotIn?: InputMaybe<Array<UserHistoryOpType>>;
  or?: InputMaybe<Array<UserHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<UserHistoryRole>;
  roleIn?: InputMaybe<Array<UserHistoryRole>>;
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  roleNEQ?: InputMaybe<UserHistoryRole>;
  roleNotIn?: InputMaybe<Array<UserHistoryRole>>;
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>;
  subContains?: InputMaybe<Scalars['String']['input']>;
  subContainsFold?: InputMaybe<Scalars['String']['input']>;
  subEqualFold?: InputMaybe<Scalars['String']['input']>;
  subGT?: InputMaybe<Scalars['String']['input']>;
  subGTE?: InputMaybe<Scalars['String']['input']>;
  subHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subLT?: InputMaybe<Scalars['String']['input']>;
  subLTE?: InputMaybe<Scalars['String']['input']>;
  subNEQ?: InputMaybe<Scalars['String']['input']>;
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for User connections */
export interface UserOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Users. */
  field: UserOrderField;
}

/** Properties by which User connections can be ordered. */
export enum UserOrderField {
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name'
}

/** UserRole is enum for the field role */
export enum UserRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/** UserSettingHistoryOpType is enum for the field operation */
export enum UserSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** UserSettingHistoryUserStatus is enum for the field status */
export enum UserSettingHistoryUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  SUSPENDED = 'SUSPENDED'
}

/**
 * UserSettingHistoryWhereInput is used for filtering UserSettingHistory objects.
 * Input was generated by ent.
 */
export interface UserSettingHistoryWhereInput {
  and?: InputMaybe<Array<UserSettingHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<UserSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<UserSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<UserSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<UserSettingHistoryOpType>>;
  or?: InputMaybe<Array<UserSettingHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<UserSettingHistoryUserStatus>;
  statusIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>;
  statusNEQ?: InputMaybe<UserSettingHistoryUserStatus>;
  statusNotIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>;
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** UserSettingUserStatus is enum for the field status */
export enum UserSettingUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  SUSPENDED = 'SUSPENDED'
}

/**
 * UserSettingWhereInput is used for filtering UserSetting objects.
 * Input was generated by ent.
 */
export interface UserSettingWhereInput {
  and?: InputMaybe<Array<UserSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** default_org edge predicates */
  hasDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>;
  hasDefaultOrgWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserSettingWhereInput>;
  or?: InputMaybe<Array<UserSettingWhereInput>>;
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<UserSettingUserStatus>;
  statusIn?: InputMaybe<Array<UserSettingUserStatus>>;
  statusNEQ?: InputMaybe<UserSettingUserStatus>;
  statusNotIn?: InputMaybe<Array<UserSettingUserStatus>>;
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>;
  userIDContains?: InputMaybe<Scalars['ID']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  userIDGT?: InputMaybe<Scalars['ID']['input']>;
  userIDGTE?: InputMaybe<Scalars['ID']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDLT?: InputMaybe<Scalars['ID']['input']>;
  userIDLTE?: InputMaybe<Scalars['ID']['input']>;
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UserWhereInput is used for filtering User objects.
 * Input was generated by ent.
 */
export interface UserWhereInput {
  and?: InputMaybe<Array<UserWhereInput>>;
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserAuthProvider>;
  authProviderIn?: InputMaybe<Array<UserAuthProvider>>;
  authProviderNEQ?: InputMaybe<UserAuthProvider>;
  authProviderNotIn?: InputMaybe<Array<UserAuthProvider>>;
  /** avatar_local_file field predicates */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContains?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileLT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileLTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** features edge predicates */
  hasFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  hasFeaturesWith?: InputMaybe<Array<FeatureWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** group_memberships edge predicates */
  hasGroupMemberships?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupMembershipsWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** org_memberships edge predicates */
  hasOrgMemberships?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrgMembershipsWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<UserSettingWhereInput>>;
  /** tfa_settings edge predicates */
  hasTfaSettings?: InputMaybe<Scalars['Boolean']['input']>;
  hasTfaSettingsWith?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserWhereInput>;
  or?: InputMaybe<Array<UserWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<UserRole>;
  roleIn?: InputMaybe<Array<UserRole>>;
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  roleNEQ?: InputMaybe<UserRole>;
  roleNotIn?: InputMaybe<Array<UserRole>>;
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>;
  subContains?: InputMaybe<Scalars['String']['input']>;
  subContainsFold?: InputMaybe<Scalars['String']['input']>;
  subEqualFold?: InputMaybe<Scalars['String']['input']>;
  subGT?: InputMaybe<Scalars['String']['input']>;
  subGTE?: InputMaybe<Scalars['String']['input']>;
  subHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subLT?: InputMaybe<Scalars['String']['input']>;
  subLTE?: InputMaybe<Scalars['String']['input']>;
  subNEQ?: InputMaybe<Scalars['String']['input']>;
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** WebhookHistoryOpType is enum for the field operation */
export enum WebhookHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for WebhookHistory connections */
export interface WebhookHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order WebhookHistories. */
  field: WebhookHistoryOrderField;
}

/** Properties by which WebhookHistory connections can be ordered. */
export enum WebhookHistoryOrderField {
  name = 'name',
  url = 'url'
}

/**
 * WebhookHistoryWhereInput is used for filtering WebhookHistory objects.
 * Input was generated by ent.
 */
export interface WebhookHistoryWhereInput {
  and?: InputMaybe<Array<WebhookHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** destination_url field predicates */
  destinationURL?: InputMaybe<Scalars['String']['input']>;
  destinationURLContains?: InputMaybe<Scalars['String']['input']>;
  destinationURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  destinationURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  destinationURLGT?: InputMaybe<Scalars['String']['input']>;
  destinationURLGTE?: InputMaybe<Scalars['String']['input']>;
  destinationURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  destinationURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  destinationURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  destinationURLLT?: InputMaybe<Scalars['String']['input']>;
  destinationURLLTE?: InputMaybe<Scalars['String']['input']>;
  destinationURLNEQ?: InputMaybe<Scalars['String']['input']>;
  destinationURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** enabled field predicates */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** failures field predicates */
  failures?: InputMaybe<Scalars['Int']['input']>;
  failuresGT?: InputMaybe<Scalars['Int']['input']>;
  failuresGTE?: InputMaybe<Scalars['Int']['input']>;
  failuresIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  failuresIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  failuresLT?: InputMaybe<Scalars['Int']['input']>;
  failuresLTE?: InputMaybe<Scalars['Int']['input']>;
  failuresNEQ?: InputMaybe<Scalars['Int']['input']>;
  failuresNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  failuresNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_error field predicates */
  lastError?: InputMaybe<Scalars['String']['input']>;
  lastErrorContains?: InputMaybe<Scalars['String']['input']>;
  lastErrorContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastErrorEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastErrorGT?: InputMaybe<Scalars['String']['input']>;
  lastErrorGTE?: InputMaybe<Scalars['String']['input']>;
  lastErrorHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastErrorHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastErrorIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastErrorIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastErrorLT?: InputMaybe<Scalars['String']['input']>;
  lastErrorLTE?: InputMaybe<Scalars['String']['input']>;
  lastErrorNEQ?: InputMaybe<Scalars['String']['input']>;
  lastErrorNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastErrorNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** last_response field predicates */
  lastResponse?: InputMaybe<Scalars['String']['input']>;
  lastResponseContains?: InputMaybe<Scalars['String']['input']>;
  lastResponseContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastResponseEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastResponseGT?: InputMaybe<Scalars['String']['input']>;
  lastResponseGTE?: InputMaybe<Scalars['String']['input']>;
  lastResponseHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastResponseHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastResponseIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastResponseIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastResponseLT?: InputMaybe<Scalars['String']['input']>;
  lastResponseLTE?: InputMaybe<Scalars['String']['input']>;
  lastResponseNEQ?: InputMaybe<Scalars['String']['input']>;
  lastResponseNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastResponseNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<WebhookHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<WebhookHistoryOpType>;
  operationIn?: InputMaybe<Array<WebhookHistoryOpType>>;
  operationNEQ?: InputMaybe<WebhookHistoryOpType>;
  operationNotIn?: InputMaybe<Array<WebhookHistoryOpType>>;
  or?: InputMaybe<Array<WebhookHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Webhook connections */
export interface WebhookOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Webhooks. */
  field: WebhookOrderField;
}

/** Properties by which Webhook connections can be ordered. */
export enum WebhookOrderField {
  name = 'name',
  url = 'url'
}

/**
 * WebhookWhereInput is used for filtering Webhook objects.
 * Input was generated by ent.
 */
export interface WebhookWhereInput {
  and?: InputMaybe<Array<WebhookWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** destination_url field predicates */
  destinationURL?: InputMaybe<Scalars['String']['input']>;
  destinationURLContains?: InputMaybe<Scalars['String']['input']>;
  destinationURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  destinationURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  destinationURLGT?: InputMaybe<Scalars['String']['input']>;
  destinationURLGTE?: InputMaybe<Scalars['String']['input']>;
  destinationURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  destinationURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  destinationURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  destinationURLLT?: InputMaybe<Scalars['String']['input']>;
  destinationURLLTE?: InputMaybe<Scalars['String']['input']>;
  destinationURLNEQ?: InputMaybe<Scalars['String']['input']>;
  destinationURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** enabled field predicates */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** failures field predicates */
  failures?: InputMaybe<Scalars['Int']['input']>;
  failuresGT?: InputMaybe<Scalars['Int']['input']>;
  failuresGTE?: InputMaybe<Scalars['Int']['input']>;
  failuresIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  failuresIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  failuresLT?: InputMaybe<Scalars['Int']['input']>;
  failuresLTE?: InputMaybe<Scalars['Int']['input']>;
  failuresNEQ?: InputMaybe<Scalars['Int']['input']>;
  failuresNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  failuresNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_error field predicates */
  lastError?: InputMaybe<Scalars['String']['input']>;
  lastErrorContains?: InputMaybe<Scalars['String']['input']>;
  lastErrorContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastErrorEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastErrorGT?: InputMaybe<Scalars['String']['input']>;
  lastErrorGTE?: InputMaybe<Scalars['String']['input']>;
  lastErrorHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastErrorHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastErrorIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastErrorIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastErrorLT?: InputMaybe<Scalars['String']['input']>;
  lastErrorLTE?: InputMaybe<Scalars['String']['input']>;
  lastErrorNEQ?: InputMaybe<Scalars['String']['input']>;
  lastErrorNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastErrorNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** last_response field predicates */
  lastResponse?: InputMaybe<Scalars['String']['input']>;
  lastResponseContains?: InputMaybe<Scalars['String']['input']>;
  lastResponseContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastResponseEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastResponseGT?: InputMaybe<Scalars['String']['input']>;
  lastResponseGTE?: InputMaybe<Scalars['String']['input']>;
  lastResponseHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastResponseHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastResponseIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastResponseIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastResponseLT?: InputMaybe<Scalars['String']['input']>;
  lastResponseLTE?: InputMaybe<Scalars['String']['input']>;
  lastResponseNEQ?: InputMaybe<Scalars['String']['input']>;
  lastResponseNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastResponseNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<WebhookWhereInput>;
  or?: InputMaybe<Array<WebhookWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

export type GetDocumentDataQueryVariables = Exact<{
  documentDataId: Scalars['ID']['input'];
}>;


export type GetDocumentDataQuery = { __typename?: 'Query', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } };

export type CreateDocumentDataMutationVariables = Exact<{
  input: CreateDocumentDataInput;
}>;


export type CreateDocumentDataMutation = { __typename?: 'Mutation', createDocumentData: { __typename?: 'DocumentDataCreatePayload', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } } };

export type UpdateDocumentDataMutationVariables = Exact<{
  updateDocumentDataId: Scalars['ID']['input'];
  input: UpdateDocumentDataInput;
}>;


export type UpdateDocumentDataMutation = { __typename?: 'Mutation', updateDocumentData: { __typename?: 'DocumentDataUpdatePayload', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } } };

export type DeleteDocumentDataMutationVariables = Exact<{
  deleteDocumentDataId: Scalars['ID']['input'];
}>;


export type DeleteDocumentDataMutation = { __typename?: 'Mutation', deleteDocumentData: { __typename?: 'DocumentDataDeletePayload', deletedID: string } };

export type GetAllGroupsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllGroupsQuery = { __typename?: 'Query', groups: { __typename?: 'GroupConnection', edges?: Array<{ __typename?: 'GroupEdge', node?: { __typename?: 'Group', id: string, name: string, description?: string | null, displayName: string, logoURL?: string | null, setting: { __typename?: 'GroupSetting', visibility: GroupSettingVisibility, joinPolicy: GroupSettingJoinPolicy, syncToSlack?: boolean | null, syncToGithub?: boolean | null, tags?: Array<string> | null } } | null } | null> | null } };

export type GetAllOrganizationsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllOrganizationsQuery = { __typename?: 'Query', organizations: { __typename?: 'OrganizationConnection', edges?: Array<{ __typename?: 'OrganizationEdge', node?: { __typename?: 'Organization', id: string, name: string, displayName: string, description?: string | null, personalOrg?: boolean | null, createdAt?: any | null, updatedAt?: any | null, parent?: { __typename?: 'Organization', id: string, name: string } | null, children: { __typename?: 'OrganizationConnection', edges?: Array<{ __typename?: 'OrganizationEdge', node?: { __typename?: 'Organization', id: string, name: string, displayName: string, description?: string | null } | null } | null> | null }, members?: Array<{ __typename?: 'OrgMembership', id: string, role: OrgMembershipRole, user: { __typename?: 'User', id: string, firstName: string, lastName: string } }> | null, setting?: { __typename?: 'OrganizationSetting', id: string, createdAt?: any | null, updatedAt?: any | null, createdBy?: string | null, updatedBy?: string | null, domains?: Array<string> | null, billingContact?: string | null, billingEmail?: string | null, billingPhone?: string | null, billingAddress?: string | null, taxIdentifier?: string | null, tags?: Array<string> | null, geoLocation?: OrganizationSettingRegion | null } | null } | null } | null> | null } };

export type CreateSubscriberMutationVariables = Exact<{
  input: CreateSubscriberInput;
}>;


export type CreateSubscriberMutation = { __typename?: 'Mutation', createSubscriber: { __typename?: 'SubscriberCreatePayload', subscriber: { __typename?: 'Subscriber', email: string } } };

export type CreateTemplateMutationVariables = Exact<{
  input: CreateTemplateInput;
}>;


export type CreateTemplateMutation = { __typename?: 'Mutation', createTemplate: { __typename?: 'TemplateCreatePayload', template: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, owner: { __typename?: 'Organization', id: string } } } };

export type UpdateTemplateMutationVariables = Exact<{
  updateTemplateId: Scalars['ID']['input'];
  input: UpdateTemplateInput;
}>;


export type UpdateTemplateMutation = { __typename?: 'Mutation', updateTemplate: { __typename?: 'TemplateUpdatePayload', template: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, owner: { __typename?: 'Organization', id: string } } } };

export type GetAllTemplatesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllTemplatesQuery = { __typename?: 'Query', templates: { __typename?: 'TemplateConnection', edges?: Array<{ __typename?: 'TemplateEdge', node?: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null } | null } | null> | null } };

export type FilterTemplatesQueryVariables = Exact<{
  where?: InputMaybe<TemplateWhereInput>;
}>;


export type FilterTemplatesQuery = { __typename?: 'Query', templates: { __typename?: 'TemplateConnection', edges?: Array<{ __typename?: 'TemplateEdge', node?: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null } | null } | null> | null } };

export type GetTemplateQueryVariables = Exact<{
  getTemplateId: Scalars['ID']['input'];
}>;


export type GetTemplateQuery = { __typename?: 'Query', template: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null } };

export type GetUserProfileQueryVariables = Exact<{
  userId: Scalars['ID']['input'];
}>;


export type GetUserProfileQuery = { __typename?: 'Query', user: { __typename?: 'User', id: string, firstName: string, lastName: string, displayName: string, email: string, avatarRemoteURL?: string | null, setting: { __typename?: 'UserSetting', status: UserSettingUserStatus, tags?: Array<string> | null } } };


export const GetDocumentDataDocument = gql`
    query GetDocumentData($documentDataId: ID!) {
  documentData(id: $documentDataId) {
    id
    templateID
    data
  }
}
    `;

export function useGetDocumentDataQuery(options: Omit<Urql.UseQueryArgs<GetDocumentDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetDocumentDataQuery, GetDocumentDataQueryVariables>({ query: GetDocumentDataDocument, ...options });
};
export const CreateDocumentDataDocument = gql`
    mutation CreateDocumentData($input: CreateDocumentDataInput!) {
  createDocumentData(input: $input) {
    documentData {
      id
      templateID
      data
    }
  }
}
    `;

export function useCreateDocumentDataMutation() {
  return Urql.useMutation<CreateDocumentDataMutation, CreateDocumentDataMutationVariables>(CreateDocumentDataDocument);
};
export const UpdateDocumentDataDocument = gql`
    mutation UpdateDocumentData($updateDocumentDataId: ID!, $input: UpdateDocumentDataInput!) {
  updateDocumentData(id: $updateDocumentDataId, input: $input) {
    documentData {
      id
      templateID
      data
    }
  }
}
    `;

export function useUpdateDocumentDataMutation() {
  return Urql.useMutation<UpdateDocumentDataMutation, UpdateDocumentDataMutationVariables>(UpdateDocumentDataDocument);
};
export const DeleteDocumentDataDocument = gql`
    mutation DeleteDocumentData($deleteDocumentDataId: ID!) {
  deleteDocumentData(id: $deleteDocumentDataId) {
    deletedID
  }
}
    `;

export function useDeleteDocumentDataMutation() {
  return Urql.useMutation<DeleteDocumentDataMutation, DeleteDocumentDataMutationVariables>(DeleteDocumentDataDocument);
};
export const GetAllGroupsDocument = gql`
    query GetAllGroups {
  groups {
    edges {
      node {
        id
        name
        description
        displayName
        logoURL
        setting {
          visibility
          joinPolicy
          syncToSlack
          syncToGithub
          tags
        }
      }
    }
  }
}
    `;

export function useGetAllGroupsQuery(options?: Omit<Urql.UseQueryArgs<GetAllGroupsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllGroupsQuery, GetAllGroupsQueryVariables>({ query: GetAllGroupsDocument, ...options });
};
export const GetAllOrganizationsDocument = gql`
    query GetAllOrganizations {
  organizations {
    edges {
      node {
        id
        name
        displayName
        description
        personalOrg
        parent {
          id
          name
        }
        children {
          edges {
            node {
              id
              name
              displayName
              description
            }
          }
        }
        members {
          id
          role
          user {
            id
            firstName
            lastName
          }
        }
        setting {
          id
          createdAt
          updatedAt
          createdBy
          updatedBy
          domains
          billingContact
          billingEmail
          billingPhone
          billingAddress
          taxIdentifier
          tags
          geoLocation
        }
        createdAt
        updatedAt
      }
    }
  }
}
    `;

export function useGetAllOrganizationsQuery(options?: Omit<Urql.UseQueryArgs<GetAllOrganizationsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllOrganizationsQuery, GetAllOrganizationsQueryVariables>({ query: GetAllOrganizationsDocument, ...options });
};
export const CreateSubscriberDocument = gql`
    mutation CreateSubscriber($input: CreateSubscriberInput!) {
  createSubscriber(input: $input) {
    subscriber {
      email
    }
  }
}
    `;

export function useCreateSubscriberMutation() {
  return Urql.useMutation<CreateSubscriberMutation, CreateSubscriberMutationVariables>(CreateSubscriberDocument);
};
export const CreateTemplateDocument = gql`
    mutation CreateTemplate($input: CreateTemplateInput!) {
  createTemplate(input: $input) {
    template {
      id
      name
      templateType
      description
      jsonconfig
      uischema
      owner {
        id
      }
    }
  }
}
    `;

export function useCreateTemplateMutation() {
  return Urql.useMutation<CreateTemplateMutation, CreateTemplateMutationVariables>(CreateTemplateDocument);
};
export const UpdateTemplateDocument = gql`
    mutation UpdateTemplate($updateTemplateId: ID!, $input: UpdateTemplateInput!) {
  updateTemplate(id: $updateTemplateId, input: $input) {
    template {
      id
      name
      templateType
      description
      jsonconfig
      uischema
      owner {
        id
      }
    }
  }
}
    `;

export function useUpdateTemplateMutation() {
  return Urql.useMutation<UpdateTemplateMutation, UpdateTemplateMutationVariables>(UpdateTemplateDocument);
};
export const GetAllTemplatesDocument = gql`
    query GetAllTemplates {
  templates {
    edges {
      node {
        id
        name
        templateType
        description
        jsonconfig
        uischema
      }
    }
  }
}
    `;

export function useGetAllTemplatesQuery(options?: Omit<Urql.UseQueryArgs<GetAllTemplatesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllTemplatesQuery, GetAllTemplatesQueryVariables>({ query: GetAllTemplatesDocument, ...options });
};
export const FilterTemplatesDocument = gql`
    query FilterTemplates($where: TemplateWhereInput) {
  templates(where: $where) {
    edges {
      node {
        id
        name
        templateType
        description
        jsonconfig
        uischema
      }
    }
  }
}
    `;

export function useFilterTemplatesQuery(options?: Omit<Urql.UseQueryArgs<FilterTemplatesQueryVariables>, 'query'>) {
  return Urql.useQuery<FilterTemplatesQuery, FilterTemplatesQueryVariables>({ query: FilterTemplatesDocument, ...options });
};
export const GetTemplateDocument = gql`
    query GetTemplate($getTemplateId: ID!) {
  template(id: $getTemplateId) {
    id
    templateType
    name
    description
    jsonconfig
    uischema
  }
}
    `;

export function useGetTemplateQuery(options: Omit<Urql.UseQueryArgs<GetTemplateQueryVariables>, 'query'>) {
  return Urql.useQuery<GetTemplateQuery, GetTemplateQueryVariables>({ query: GetTemplateDocument, ...options });
};
export const GetUserProfileDocument = gql`
    query GetUserProfile($userId: ID!) {
  user(id: $userId) {
    id
    firstName
    lastName
    displayName
    email
    avatarRemoteURL
    setting {
      status
      tags
    }
  }
}
    `;

export function useGetUserProfileQuery(options: Omit<Urql.UseQueryArgs<GetUserProfileQueryVariables>, 'query'>) {
  return Urql.useQuery<GetUserProfileQuery, GetUserProfileQueryVariables>({ query: GetUserProfileDocument, ...options });
};